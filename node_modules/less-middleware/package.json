{
  "author": {
    "name": "Randy Merrill",
    "email": "Zoramite+github@gmail.com",
    "url": "http://forthedeveloper.com"
  },
  "name": "less-middleware",
  "description": "LESS.js middleware for connect.",
  "version": "0.1.9",
  "repository": {
    "type": "git",
    "url": "git://github.com/emberfeather/less.js-middleware.git"
  },
  "main": "lib/middleware.js",
  "dependencies": {
    "less": ">= 1.3.0",
    "mkdirp": ">= 0.3.1"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "## Installation\n\n    sudo npm install less-middleware\n\n## Options\n\n<table>\n    <thead>\n        <tr>\n            <th>Option</th>\n            <th>Description</th>\n            <th>Default</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <th><code>force</code></th>\n            <td>Always re-compile less files on each request.</td>\n            <td><code>false</code></td>\n        </tr>\n        <tr>\n            <th><code>once</code></th>\n            <td>Only check for need to recompile once after each server restart. Useful for reducing disk i/o on production.</td>\n            <td><code>false</code></td>\n        </tr>\n        <tr>\n            <th><code>debug</code></th>\n            <td>Output any debugging messages to the console.</td>\n            <td><code>false</code></td>\n        </tr>\n        <tr>\n            <th><code>src</code></th>\n            <td>Source directory containing the <code>.less</code> files. <strong>Required.</strong></td>\n            <td></td>\n        </tr>\n        <tr>\n            <th><code>dest</code></th>\n            <td>Desitnation directory to output the compiled <code>.css</code> files.</td>\n            <td><code>&lt;src&gt;</code></td>\n        </tr>\n        <tr>\n            <th><code>paths</code></th>\n            <td>Specify search paths for <code>@import</code> directives</td>\n            <td>The <code>dirname</code> of <code>&lt;src&gt;</code></td>\n        </tr>\n        <tr>\n            <th><code>prefix</code></th>\n            <td>Path which should be stripped from the public <code>pathname</code>.</td>\n            <td></td>\n        </tr>\n        <tr>\n            <th><code>compress</code></th>\n            <td>Compress the output being written to the <code>*.css</code> files. When set to <code>'auto'</code> compression will only happen when the css file ends with <code>.min.css</code> or <code>-min.css</code>.</td>\n            <td><code>auto</code></td>\n        </tr>\n        <tr>\n            <th><code>optimization</code></th>\n            <td>Desired level of LESS optimization. Optionally <code>0</code>, <code>1</code>, or <code>2</code></td>\n            <td><code>0</code></td>\n        </tr>\n        <tr>\n            <th><code>dumpLineNumbers</th>\n            <td>Add line tracking to the compiled css. Optionally <code>0</code>, <code>'comments'</code>, or <code>'mediaquery'</code></td>\n            <td><code>0</code></td>\n        </tr>\n\n    </tbody>\n</table>\n\n## Examples\n\n### Connect\n\n    var lessMiddleware = require('less-middleware');\n\n    var server = connect.createServer(\n        lessMiddleware({\n            src: __dirname + '/public',\n            compress: true\n        }),\n        connect.staticProvider(__dirname + '/public')\n    );\n\n### Express\n\n    var lessMiddleware = require('less-middleware');\n\n    var app = express.createServer();\n\n    app.configure(function () {\n        // Other configuration here...\n\n        app.use(lessMiddleware({\n            src: __dirname + '/public',\n            compress: true\n        }));\n\n        app.use(express.static(__dirname + '/public'));\n    });\n\n### Express - Different `src` and `dest`\n\nWhen using a different `src` and `dest` you can use the `prefix` option to make the directory structure cleaner.\n\nRequests for static assets (like stylesheets) made to the express server use a `pathname` to look up the file. So if the request is for `http://localhost/stylesheets/styles.css` the `pathname` will be `/stylesheets/styles.css`.\n\nThe less middleware uses that path to determine where to look for less files. In the original example it looks for the less file at `/public/stylesheets/styles.less` and compiles it to `/public/stylesheets/styles.css`.\n\nIf you are using a different `src` and `dest` options it causes for more complex directories structures unless you use the `prefix` option. For example, without the `prefix`, and with a `src` of `/src/less` and a `dest` of `/public` it would look for the less file at `/src/less/stylesheets/styles.less` and compile it to `/public/stylesheets/styles.css`. To make it cleaner you can use the `prefix` option:\n\n    var lessMiddleware = require('less-middleware');\n\n    var app = express.createServer();\n\n    app.configure(function () {\n        // Other configuration here...\n\n        app.use(lessMiddleware({\n            dest: __dirname + '/public/stylesheets',\n            src: __dirname + '/src/less',\n            prefix: '/stylesheets',\n            compress: true\n        }));\n\n        app.use(express.static(__dirname + '/public'));\n    });\n\nUsing the `prefix` it changes the `pathname` from `/stylesheets/styles.css` to `/styles.css`. With that prefix removed from the `pathname` it makes things cleaner. With the `prefix` removed it would look for the less file at `/src/less/styles.less` and compile it to `/public/stylesheets/styles.css`.\n",
  "readmeFilename": "readme.md",
  "_id": "less-middleware@0.1.9",
  "dist": {
    "shasum": "4e89a6650b5ccc6fc7647d4912d0276807a8b85b"
  },
  "_from": "less-middleware@*"
}
